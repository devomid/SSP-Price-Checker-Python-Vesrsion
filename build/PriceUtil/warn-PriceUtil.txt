
This file lists modules PyInstaller was not able to find. This does not
necessarily mean this module is required for running your program. Python and
Python 3rd-party packages include a lot of conditional or optional modules. For
example the module 'ntpath' only exists on Windows, whereas the module
'posixpath' only exists on Posix systems.

Types if import:
* top-level: imported at the top-level - look at these first
* conditional: imported within an if-statement
* delayed: imported within a function
* optional: imported within a try-except-statement

IMPORTANT: Do NOT post this list to the issue-tracker. Use it as a basis for
            tracking down the missing module yourself. Thanks!

missing module named pyimod02_importers - imported by /Users/omid/Coding/Learning Projects/Python learning/venv/lib/python3.12/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py (delayed), /Users/omid/Coding/Learning Projects/Python learning/venv/lib/python3.12/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py (delayed)
missing module named _winapi - imported by encodings (delayed, conditional, optional), shutil (conditional), ntpath (optional), subprocess (conditional), mimetypes (optional)
missing module named nt - imported by shutil (conditional), importlib._bootstrap_external (conditional), ntpath (optional), os (delayed, conditional, optional), ctypes (delayed, conditional)
missing module named winreg - imported by importlib._bootstrap_external (conditional), platform (delayed, optional), mimetypes (optional), darkdetect._windows_detect (top-level), urllib.request (delayed, conditional, optional), pkg_resources._vendor.platformdirs.windows (delayed, optional)
excluded module named _frozen_importlib - imported by importlib (optional), importlib.abc (optional), zipimport (top-level)
missing module named _frozen_importlib_external - imported by importlib._bootstrap (delayed), importlib (optional), importlib.abc (optional), zipimport (top-level)
missing module named msvcrt - imported by subprocess (optional), getpass (optional)
missing module named typing_extensions - imported by customtkinter.windows.widgets.font.ctk_font (optional), customtkinter.windows.widgets.scaling.scaling_base_class (optional), customtkinter.windows.widgets.core_widget_classes.ctk_base_class (optional), PIL._typing (conditional, optional), customtkinter.windows.widgets.ctk_progressbar (optional), customtkinter.windows.widgets.ctk_segmented_button (optional), customtkinter.windows.widgets.ctk_scrollable_frame (optional), pkg_resources._vendor.packaging.metadata (conditional, optional), packaging.metadata (conditional, optional)
missing module named _manylinux - imported by pkg_resources._vendor.packaging._manylinux (delayed, optional), packaging._manylinux (delayed, optional)
missing module named jnius - imported by pkg_resources._vendor.platformdirs.android (delayed, optional)
missing module named platformdirs - imported by pkg_resources._vendor.platformdirs.__main__ (top-level)
missing module named 'pkg_resources.extern.importlib_resources' - imported by pkg_resources._vendor.jaraco.text (optional)
missing module named 'pkg_resources.extern.more_itertools' - imported by pkg_resources._vendor.jaraco.functools (top-level)
missing module named 'pkg_resources.extern.backports' - imported by pkg_resources._vendor.jaraco.context (conditional)
missing module named pkg_resources.extern.packaging - imported by pkg_resources.extern (top-level), pkg_resources (top-level)
missing module named pkg_resources.extern.platformdirs - imported by pkg_resources.extern (top-level), pkg_resources (top-level)
missing module named 'pkg_resources.extern.jaraco' - imported by pkg_resources (top-level), pkg_resources._vendor.jaraco.text (top-level)
missing module named vms_lib - imported by platform (delayed, optional)
missing module named 'java.lang' - imported by platform (delayed, optional)
missing module named java - imported by platform (delayed)
missing module named _winreg - imported by platform (delayed, optional)
missing module named _wmi - imported by platform (optional)
missing module named olefile - imported by PIL.FpxImagePlugin (top-level), PIL.MicImagePlugin (top-level)
missing module named numpy - imported by PIL.Image (delayed, conditional, optional)
missing module named cffi - imported by PIL.Image (optional), PIL.PyAccess (optional)
missing module named defusedxml - imported by PIL.Image (optional)
missing module named greenlet - imported by jdatetime (optional)
missing module named ExceptionHandling.NSStackTraceKey - imported by ExceptionHandling (top-level), PyObjCTools.Debugging (top-level)
missing module named ExceptionHandling.NSLogUncaughtExceptionMask - imported by ExceptionHandling (top-level), PyObjCTools.Debugging (top-level)
missing module named ExceptionHandling.NSLogAndHandleEveryExceptionMask - imported by ExceptionHandling (top-level), PyObjCTools.Debugging (top-level)
missing module named ExceptionHandling.NSExceptionHandler - imported by ExceptionHandling (top-level), PyObjCTools.Debugging (top-level)
missing module named objc.super - imported by objc (top-level), PyObjCTools.AppHelper (top-level)
missing module named Foundation.NSTimer - imported by Foundation (top-level), PyObjCTools.AppHelper (top-level)
missing module named Foundation.NSThread - imported by Foundation (top-level), PyObjCTools.AppHelper (top-level)
missing module named Foundation.NSRunLoop - imported by Foundation (top-level), PyObjCTools.AppHelper (top-level)
missing module named Foundation.NSNotificationCenter - imported by Foundation (top-level), PyObjCTools.AppHelper (top-level)
missing module named Foundation.NSLog - imported by Foundation (top-level), PyObjCTools.AppHelper (top-level), PyObjCTools.Debugging (top-level)
missing module named Foundation.NSDefaultRunLoopMode - imported by Foundation (top-level), PyObjCTools.AppHelper (top-level)
missing module named Foundation.NSDate - imported by Foundation (top-level), PyObjCTools.AppHelper (top-level)
missing module named Foundation.NSAutoreleasePool - imported by Foundation (top-level), PyObjCTools.AppHelper (top-level)
missing module named AppKit.NSRunAlertPanel - imported by AppKit (top-level), PyObjCTools.AppHelper (top-level)
missing module named AppKit.NSApplicationMain - imported by AppKit (top-level), PyObjCTools.AppHelper (top-level)
missing module named AppKit.NSApplicationDidFinishLaunchingNotification - imported by AppKit (top-level), PyObjCTools.AppHelper (top-level)
missing module named AppKit.NSApp - imported by AppKit (top-level), PyObjCTools.AppHelper (top-level)
missing module named objc.nosuchclass_error - imported by objc (top-level), objc._lazyimport (top-level)
missing module named objc.loadBundle - imported by objc (top-level), objc._lazyimport (top-level)
missing module named objc.getClassList - imported by objc (top-level), objc._lazyimport (top-level)
missing module named objc.NULL - imported by objc (top-level), objc._properties (top-level)
missing module named objc._C_BOOL - imported by objc (top-level), objc._properties (top-level)
missing module named Foundation.NSUserDefaults - imported by Foundation (optional), darkdetect._mac_detect (optional)
missing module named Foundation.NSKeyValueChangeNewKey - imported by Foundation (optional), darkdetect._mac_detect (optional)
missing module named Foundation.NSKeyValueObservingOptionNew - imported by Foundation (optional), darkdetect._mac_detect (optional)
missing module named Foundation.NSObject - imported by Foundation (optional), darkdetect._mac_detect (optional), PyObjCTools.AppHelper (top-level), PyObjCTools.Debugging (top-level)
